generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model chatmessagedb {
  id                Int        @id @default(autoincrement())
  user_id           Int
  chatroom_id       Int
  content           String     @db.Text
  message_send_date DateTime   @default(now()) @db.DateTime(0)
  read              Boolean    @default(false)
  chatroomdb        chatroomdb @relation(fields: [chatroom_id], references: [id], onUpdate: Restrict, map: "chatmessagedb_ibfk_1")
  userdb            userdb     @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "chatmessagedb_ibfk_2")

  @@index([chatroom_id], map: "chatroom_id")
  @@index([user_id], map: "user_id")
}

model chatroomdb {
  id            Int             @id @default(autoincrement())
  userdb        userdb[]
  chatmessagedb chatmessagedb[]
}

model commentdb {
  id      Int    @id @default(autoincrement())
  user_id Int
  post_id Int
  content String @db.Text
  postdb  postdb @relation(fields: [post_id], references: [id], onUpdate: Restrict, map: "commentdb_ibfk_1")
  userdb  userdb @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "commentdb_ibfk_2")

  @@index([post_id], map: "post_id")
  @@index([user_id], map: "user_id")
}

model likesdb {
  id      Int    @id @default(autoincrement())
  user_id Int
  post_id Int
  postdb  postdb @relation(fields: [post_id], references: [id], onUpdate: Restrict, map: "likesdb_ibfk_1")
  userdb  userdb @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "likesdb_ibfk_2")

  @@index([post_id], map: "post_id")
  @@index([user_id], map: "user_id")
  @@unique([user_id, post_id])
}

model petdb {
  id         Int    @id @default(autoincrement())
  user_id    Int    
  pet_name   String @db.VarChar(10)
  pet_age    String @db.VarChar(10)
  pet_gender String @db.VarChar(2)
  pet_kinds  String @db.VarChar(15)
  pet_image  String @db.VarChar(300)
  userdb     userdb @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "petdb_ibfk_1")
}

model postdb {
  id                Int         @id @default(autoincrement())
  user_id           Int
  post_content      String?     @db.Text
  post_likes_cnt    Int         @default(0) @db.UnsignedInt
  post_comments_cnt Int?        @default(0) @db.UnsignedInt
  post_images       String      @db.VarChar(300)
  userdb            userdb      @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "postdb_ibfk_1")
  commentdb         commentdb[]
  likesdb           likesdb[]

  @@index([user_id], map: "user_id")
}

model profiledb {
  id       Int        @id @default(autoincrement())
  user_id  Int
  userdb   userdb     @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "profiledb_ibfk_1")
  reviewdb reviewdb[]

  @@index([user_id], map: "user_id")
}

model reviewdb {
  id             Int       @id @default(autoincrement())
  user_id        Int
  profile_id     Int
  review_content String    @db.VarChar(200)
  profiledb      profiledb @relation(fields: [profile_id], references: [id], onUpdate: Restrict, map: "reviewdb_ibfk_1")
  userdb         userdb    @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "reviewdb_ibfk_2")

  @@index([profile_id], map: "profile_id")
  @@index([user_id], map: "user_id")
}

model userdb {
  id            Int             @id @default(autoincrement())
  user_id       String          @unique(map: "user_id") @db.VarChar(15)
  user_pw       String          @unique(map: "user_pw") @db.VarChar(100)
  user_name     String          @unique(map: "user_name") @db.VarChar(20)
  user_birth    String        @db.VarChar(6)
  user_gender   String          @db.VarChar(2)
  user_phone    String          @unique(map: "user_phone") @db.VarChar(13)
  user_address  String          @db.VarChar(200)
  chatmessagedb chatmessagedb[]
  commentdb     commentdb[]
  likesdb       likesdb[]
  petdb         petdb[]
  postdb        postdb[]
  profiledb     profiledb[]
  reviewdb      reviewdb[]
  chatroomdb    chatroomdb[]
}
